<logs>
  <log application="/LM/W3SVC/1/ROOT/Accounting-3-130333150566296153" machine="DEANZHOU" module="BackendUI" logType="Error" logTime="2014/1/4 21:19:27">
    <title>【DEANZHOU】指定的参数已超出有效值的范围。
参数名: value</title>
    <detail>System.ArgumentOutOfRangeException: 指定的参数已超出有效值的范围。
参数名: value
   在 System.Web.UI.WebControls.TextBox.set_MaxLength(Int32 value)
   在 ASP.consumerdetailsmgmt_aspx.__BuildControltxtMemo() 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 177
   在 ASP.consumerdetailsmgmt_aspx.__BuildControlpanelDetailInputArea() 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 141
   在 ASP.consumerdetailsmgmt_aspx.__BuildControl__control55(Control __ctrl) 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 139
   在 System.Web.UI.UpdatePanel.CreateContents()
   在 ASP.consumerdetailsmgmt_aspx.__BuildControlupDetail() 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 139
   在 ASP.consumerdetailsmgmt_aspx.__BuildControlplDetail() 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 124
   在 ASP.consumerdetailsmgmt_aspx.__BuildControlContent2(Control __ctrl) 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\ConsumerDetailsMgmt.aspx:行号 6
   在 System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control contentPlaceHolder, ITemplate template)
   在 ASP.masterpagedir_masterpage_master.__BuildControlContentPlaceHolder1() 位置 http://server/Accounting/MasterPageDir/MasterPage.master:行号 89
   在 ASP.masterpagedir_masterpage_master.__BuildControlform1() 位置 http://server/Accounting/MasterPageDir/MasterPage.master:行号 32
   在 ASP.masterpagedir_masterpage_master.__BuildControlTree(masterpagedir_masterpage_master __ctrl) 位置 http://server/Accounting/MasterPageDir/MasterPage.master:行号 1
   在 ASP.masterpagedir_masterpage_master.FrameworkInitialize() 位置 c:\Windows\Microsoft.NET\Framework64\v4.0.30319\Temporary ASP.NET Files\accounting\f4336a7a\cfd560ca\App_Web_masterpage.master.315f94a0.mk_2tyg8.0.cs:行号 0
   在 System.Web.UI.MasterPage.CreateMaster(TemplateControl owner, HttpContext context, VirtualPath masterPageFile, IDictionary contentTemplateCollection)
   在 System.Web.UI.Page.get_Master()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 f:\MyProjectInServer\TestCore\Jufine.Backend.WebModel\PageBase.cs:行号 55
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="" machine="DEANZHOU" module="初始化服务实现实例" logType="Error" logTime="2014/1/4 21:20:40">
    <title>【DEANZHOU】未能加载文件或程序集“Jufine.Backend.IM.ServiceImplement”或它的某一个依赖项。系统找不到指定的文件。</title>
    <detail>System.IO.FileNotFoundException: 未能加载文件或程序集“Jufine.Backend.IM.ServiceImplement”或它的某一个依赖项。系统找不到指定的文件。
文件名:“Jufine.Backend.IM.ServiceImplement”
   在 System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   在 System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   在 System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean forIntrospection)
   在 System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection)
   在 System.Reflection.Assembly.Load(String assemblyString)
   在 Com.BaseLibrary.Contract.ServiceFactory.InitServiceInstance() 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Common\Contract\ServiceFactory.cs:行号 59

警告: 程序集绑定日志记录被关闭。
要启用程序集绑定失败日志记录，请将注册表值 [HKLM\Software\Microsoft\Fusion!EnableLog] (DWORD)设置为 1。
注意: 会有一些与程序集绑定失败日志记录关联的性能损失。
要关闭此功能，请移除注册表值 [HKLM\Software\Microsoft\Fusion!EnableLog]。
</detail>
  </log>
  <log application="" machine="DEANZHOU" module="初始化服务实现实例" logType="Error" logTime="2014/1/4 21:20:47">
    <title>【DEANZHOU】未能加载文件或程序集“Jufine.Backend.IM.ServiceImplement”或它的某一个依赖项。系统找不到指定的文件。</title>
    <detail>System.IO.FileNotFoundException: 未能加载文件或程序集“Jufine.Backend.IM.ServiceImplement”或它的某一个依赖项。系统找不到指定的文件。
文件名:“Jufine.Backend.IM.ServiceImplement”
   在 System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   在 System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   在 System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean forIntrospection)
   在 System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection)
   在 System.Reflection.Assembly.Load(String assemblyString)
   在 Com.BaseLibrary.Contract.ServiceFactory.InitServiceInstance() 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Common\Contract\ServiceFactory.cs:行号 59

警告: 程序集绑定日志记录被关闭。
要启用程序集绑定失败日志记录，请将注册表值 [HKLM\Software\Microsoft\Fusion!EnableLog] (DWORD)设置为 1。
注意: 会有一些与程序集绑定失败日志记录关联的性能损失。
要关闭此功能，请移除注册表值 [HKLM\Software\Microsoft\Fusion!EnableLog]。
</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-4-130333152953062669" machine="DEANZHOU" module="UnExceptedException" logType="UnExceptedException" logTime="2014/1/4 21:28:03">
    <title>【DEANZHOU】未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。</title>
    <detail>System.IO.FileNotFoundException: 未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。
文件名:“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”
   在 EntityFramework.Extensions.ObjectQueryExtensions.ToObjectQuery[TEntity](IQueryable`1 query)
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 90
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 66
   在 Com.BaseLibrary.Service.BatchExtensionsAdapter.Delete[TEntity](ObjectSet`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\EF Extensions\BatchExtensionsAdapter.cs:行号 24
   在 Com.BaseLibrary.Service.DataBase`2.BatchDelete(List`1 idList) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 61
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.BatchDelete(List`1 keyList) 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 44

=== 预绑定状态信息 ===
日志: 用户 = NT AUTHORITY\SYSTEM
日志: DisplayName = EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
 (Fully-specified)
日志: Appbase = file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/
日志: 初始 PrivatePath = F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\bin
调用程序集: EntityFramework.Extended, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null。
===
日志: 此绑定从 default 加载上下文开始。
日志: 正在使用应用程序配置文件: F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\web.config
日志: 使用主机配置文件: C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet.config
日志: 使用 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\config\machine.config 的计算机配置文件。
日志: 策略后引用: EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
日志: 尝试下载新的 URL file:///C:/Windows/Microsoft.NET/Framework64/v4.0.30319/Temporary ASP.NET Files/accounting/f4336a7a/cfd560ca/EntityFramework.DLL。
日志: 尝试下载新的 URL file:///C:/Windows/Microsoft.NET/Framework64/v4.0.30319/Temporary ASP.NET Files/accounting/f4336a7a/cfd560ca/EntityFramework/EntityFramework.DLL。
日志: 尝试下载新的 URL file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/bin/EntityFramework.DLL。
日志: 尝试下载新的 URL file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/bin/EntityFramework/EntityFramework.DLL。
日志: 尝试下载新的 URL file:///C:/Windows/Microsoft.NET/Framework64/v4.0.30319/Temporary ASP.NET Files/accounting/f4336a7a/cfd560ca/EntityFramework.EXE。
日志: 尝试下载新的 URL file:///C:/Windows/Microsoft.NET/Framework64/v4.0.30319/Temporary ASP.NET Files/accounting/f4336a7a/cfd560ca/EntityFramework/EntityFramework.EXE。
日志: 尝试下载新的 URL file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/bin/EntityFramework.EXE。
日志: 尝试下载新的 URL file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/bin/EntityFramework/EntityFramework.EXE。
</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-4-130333152953062669" machine="DEANZHOU" module="UnExceptedException" logType="UnExceptedException" logTime="2014/1/4 21:28:59">
    <title>【DEANZHOU】未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。</title>
    <detail>System.IO.FileNotFoundException: 未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。
文件名:“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”
   在 EntityFramework.Extensions.ObjectQueryExtensions.ToObjectQuery[TEntity](IQueryable`1 query)
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 90
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 66
   在 Com.BaseLibrary.Service.BatchExtensionsAdapter.Delete[TEntity](ObjectSet`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\EF Extensions\BatchExtensionsAdapter.cs:行号 24
   在 Com.BaseLibrary.Service.DataBase`2.BatchDelete(List`1 idList) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 61
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.BatchDelete(List`1 keyList) 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 44

=== 预绑定状态信息 ===
日志: 用户 = NT AUTHORITY\SYSTEM
日志: DisplayName = EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
 (Fully-specified)
日志: Appbase = file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/
日志: 初始 PrivatePath = F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\bin
调用程序集: EntityFramework.Extended, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null。
===
日志: 此绑定从 default 加载上下文开始。
日志: 正在使用应用程序配置文件: F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\web.config
日志: 使用主机配置文件: C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet.config
日志: 使用 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\config\machine.config 的计算机配置文件。
日志: 策略后引用: EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
日志: 相同的绑定已出现过，因 hr = 0x80070002 而失败。
</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-4-130333152953062669" machine="DEANZHOU" module="UnExceptedException" logType="UnExceptedException" logTime="2014/1/4 21:30:19">
    <title>【DEANZHOU】未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。</title>
    <detail>System.IO.FileNotFoundException: 未能加载文件或程序集“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”或它的某一个依赖项。系统找不到指定的文件。
文件名:“EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”
   在 EntityFramework.Extensions.ObjectQueryExtensions.ToObjectQuery[TEntity](IQueryable`1 query)
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 90
   在 EntityFramework.Extensions.BatchExtensions.Delete[TEntity](IQueryable`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\Framework\EntityFramework.Extended\Extensions\BatchExtensions.cs:行号 66
   在 Com.BaseLibrary.Service.BatchExtensionsAdapter.Delete[TEntity](ObjectSet`1 source, Expression`1 filterExpression) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\EF Extensions\BatchExtensionsAdapter.cs:行号 24
   在 Com.BaseLibrary.Service.DataBase`2.BatchDelete(List`1 idList) 位置 f:\MyProjectInServer\TestCore\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 61
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.BatchDelete(List`1 keyList) 位置 f:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 44

=== 预绑定状态信息 ===
日志: 用户 = NT AUTHORITY\SYSTEM
日志: DisplayName = EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
 (Fully-specified)
日志: Appbase = file:///F:/MyProjectInServer/TestCore/Projects/Accounting/Jufine.Backend.Accounting.WebUI/
日志: 初始 PrivatePath = F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\bin
调用程序集: EntityFramework.Extended, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null。
===
日志: 此绑定从 default 加载上下文开始。
日志: 正在使用应用程序配置文件: F:\MyProjectInServer\TestCore\Projects\Accounting\Jufine.Backend.Accounting.WebUI\web.config
日志: 使用主机配置文件: C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet.config
日志: 使用 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\config\machine.config 的计算机配置文件。
日志: 策略后引用: EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
日志: 相同的绑定已出现过，因 hr = 0x80070002 而失败。
</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130359734698828974" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/2/4 15:47:03">
    <title>【PC-20140110DKZC】找不到 EntityType“Jufine.Backend.Accounting.DataContracts.VideoListInfo”的映射和元数据信息。</title>
    <detail>System.InvalidOperationException: 找不到 EntityType“Jufine.Backend.Accounting.DataContracts.VideoListInfo”的映射和元数据信息。
   在 System.Data.Objects.ObjectContext.GetTypeUsage(Type entityCLRType)
   在 System.Data.Objects.ObjectContext.GetEntitySetFromContainer(EntityContainer container, Type entityCLRType, String exceptionParameterName)
   在 System.Data.Objects.ObjectContext.GetEntitySetForType(Type entityCLRType, String exceptionParameterName)
   在 System.Data.Objects.ObjectContext.CreateObjectSet[TEntity]()
   在 Com.BaseLibrary.Service.DataBase`2.GetSelectLinq(EF entities, QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 127
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 91
   在 Jufine.Backend.Accounting.Business.VideoListBL.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\VideoListBL.cs:行号 92</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130359784503109727" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/2/4 17:10:16">
    <title>【PC-20140110DKZC】路径中具有非法字符。</title>
    <detail>System.ArgumentException: 路径中具有非法字符。
   在 System.IO.Path.GetFileName(String path)
   在 System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)
   在 System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize)
   在 System.IO.StreamReader..ctor(String path, Encoding encoding)
   在 HtmlAgilityPack.HtmlDocument.Load(String path) 位置 D:\Source\htmlagilitypack.new\Trunk\HtmlAgilityPack\HtmlDocument.PathMethods.cs:行号 75
   在 Com.BaseLibrary.HttpCore.CLVideoListControl.GetCLVideoList() 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\HttpCore\Controls\CLVideoListControl\CLVideoListControl.cs:行号 61
   在 Jufine.Backend.Accounting.WebUI.VideoListMgmt.Page_Load(Object sender, EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.WebUI\VideoListMgmt.aspx.cs:行号 125
   在 System.Web.UI.Control.LoadRecursive()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130381361882829352" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 16:31:03">
    <title>【PC-20140110DKZC】基础提供程序在 Open 上失败。</title>
    <detail>System.Data.EntityException: 基础提供程序在 Open 上失败。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 找不到网络路径。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   在 System.Data.EntityClient.EntityConnection.Open()
   在 System.Data.Objects.ObjectContext.EnsureConnection()
   在 System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   在 System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()
   在 System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.Count[TSource](IQueryable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 101
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 92</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130381361882829352" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 16:39:08">
    <title>【PC-20140110DKZC】基础提供程序在 Open 上失败。</title>
    <detail>System.Data.EntityException: 基础提供程序在 Open 上失败。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 找不到网络路径。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   在 System.Data.EntityClient.EntityConnection.Open()
   在 System.Data.Objects.ObjectContext.EnsureConnection()
   在 System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   在 System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()
   在 System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.Count[TSource](IQueryable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 101
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 92</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130381361882829352" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 16:47:30">
    <title>【PC-20140110DKZC】基础提供程序在 Open 上失败。</title>
    <detail>System.Data.EntityException: 基础提供程序在 Open 上失败。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 找不到网络路径。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean&amp; closeStoreConnectionOnFailure)
   在 System.Data.EntityClient.EntityConnection.Open()
   在 System.Data.Objects.ObjectContext.EnsureConnection()
   在 System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   在 System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()
   在 System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.Count[TSource](IQueryable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 101
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 92</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-15-130381425690448939" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:16:11">
    <title>【PC-20140110DKZC】“UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   在 System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 118
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.QueryUV(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 104</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-15-130381425690448939" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:16:26">
    <title>【PC-20140110DKZC】“UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   在 System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 118
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.QueryUV(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 104</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-15-130381425690448939" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:17:15">
    <title>【PC-20140110DKZC】“UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “UVConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   在 System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   在 Com.BaseLibrary.Service.DataBase`2.Query(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 118
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.QueryUV(QueryConditionInfo`1 queryCondition) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 104</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-16-130381426524586649" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:17:38">
    <title>【PC-20140110DKZC】“ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)
   在 Com.BaseLibrary.Service.DataBase`2.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 28
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 20</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-16-130381426524586649" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:18:09">
    <title>【PC-20140110DKZC】“ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)
   在 Com.BaseLibrary.Service.DataBase`2.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 28
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 20</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-16-130381426524586649" machine="PC-20140110DKZC" module="UnExceptedException" logType="UnExceptedException" logTime="2014/3/1 18:18:58">
    <title>【PC-20140110DKZC】“ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。</title>
    <detail>System.Data.ConstraintException: “ConsumerDetails”的“ResponsiblePersonID”属性不能设置为“null”值。必须将该属性设置为类型为“Int32”的非 null 值。
   在 System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(DbDataReader reader, Int32 ordinal)
   在 System.Data.Common.Internal.Materialization.Shaper.GetPropertyValueWithErrorHandling[TProperty](Int32 ordinal, String propertyName, String typeName)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly[TEntity](Func`2 constructEntityDelegate, EntityKey entityKey, EntitySet entitySet)
   在 lambda_method(Closure , Shaper )
   在 System.Data.Common.Internal.Materialization.Coordinator`1.ReadNextElement(Shaper shaper)
   在 System.Data.Common.Internal.Materialization.Shaper`1.SimpleEnumerator.MoveNext()
   在 System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)
   在 System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)
   在 Com.BaseLibrary.Service.DataBase`2.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Service\DataBase.cs:行号 28
   在 Jufine.Backend.Accounting.Business.ConsumerDetailsBL.Get(Int32 id) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Projects\Accounting\Jufine.Backend.Accounting.ServiceImplement\Business\ConsumerDetailsBL.cs:行号 20</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:17:09">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:07">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:09">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:10">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:24">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:24">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:29">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:18:50">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:20:48">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:21:01">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:23:59">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:25:07">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:25:28">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:25:31">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:25:47">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:26:49">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:26:59">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:27:00">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:27:26">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:27:37">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130382074137064570" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/2 12:28:09">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:15:12">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:15:45">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:15:45">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:15:46">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:17:03">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
  <log application="/LM/W3SVC/1/ROOT/Accounting-1-130384484967351684" machine="PC-20140110DKZC" module="BackendUI" logType="Error" logTime="2014/3/5 7:17:29">
    <title>【PC-20140110DKZC】“Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。</title>
    <detail>System.TypeInitializationException: “Jufine.Backend.Security.Authentication.User”的类型初始值设定项引发异常。 ---&gt; System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---&gt; System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   在 System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   在 System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal&amp; connection)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText, SqlParameter[] commandParameters) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 457
   在 Com.BaseLibrary.Data.SqlHelper.ExecuteDataset(String connectionString, CommandType commandType, String commandText) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\BaseLibrary\Com.BaseLibrary.Common\Data\SqlHelper.cs:行号 435
   在 Jufine.Backend.Security.Authentication.User.GetAllResource()
   在 Jufine.Backend.Security.Authentication.User..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 Jufine.Backend.Security.Authentication.User..ctor()
   在 Jufine.Backend.Security.Authentication.UserFactory.CreateUser()
   在 Jufine.Backend.WebModel.PageBase.OnPreInit(EventArgs e) 位置 e:\MyPrjsInGitHub\BackendPrjsInGitHub\Jufine.Backend.WebModel\PageBase.cs:行号 59
   在 System.Web.UI.Page.PerformPreInit()
   在 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</detail>
  </log>
</logs>